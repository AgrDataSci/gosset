% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/btpermute.R
\name{btpermute}
\alias{btpermute}
\title{Variable selection with Permuted Inclusion Criterion}
\usage{
btpermute(
  contests = NULL,
  predictors = NULL,
  n.iterations = 15,
  seed = NULL,
  ...
)
}
\arguments{
\item{contests}{a data frame with pairwise binary contests with these variables
'id','player1','player2','win1','win2'; in that order. The id should match with 
those found in \code{predictors}}

\item{predictors}{a data frame with player predictors with an id 
that should match with \code{contests}}

\item{n.iterations}{integer, number of iterations to compute}

\item{seed}{integer, the seed for random number generation. If NULL (the default), 
\pkg{gosset} will set the seed randomly}

\item{...}{additional arguments passed to \pkg{BradleyTerry2} methods}
}
\value{
an object of class \code{gosset_btpermute} with the final \code{BTm()} model,
selected variables, seeds (random numbers) used for permutations and deviances
}
\description{
Permutation method to select variables for pair comparison data with 
 Bradley-Terry model. This procedure consists of two steps. In the first 
 step, \code{btpermute} adds to the set of original \code{predictors} an 
 additional set of 'fake' variables generated by randomly permuting the 
 original \code{predictors}. Permuted \code{predictors} are not expected to 
 have any predictive power for pairwise rankings. In the second step, 
 \code{btpermute} adds predictors to the Bradley-Terry model. Each 
 \code{predictors} (real and permuted) is added to a null model separately
 and retained if the variable reduces the model deviance most strongly. 
 This process is replicated \code{n} times with argument \code{n.iterations}, 
 each time with a new random permutation that can be controlled for 
 replicability using argument \code{seed}. Across the n \code{n.iterations}
 the function identifies the predictor that appeared most often as the most
 deviance-reducing one. When this has a real variable, it is added to the 
 model. Variable selection stops when a permuted variable(s) is found to be 
 the most frequent most deviance-reducing \code{predictors}.
}
\examples{
\donttest{
require("BradleyTerry2")

data("kenyachoice", package = "gosset")

mod <- btpermute(contests = kenyachoice$contests,
                 predictors = kenyachoice$predictors,
                 n.iterations = 10,
                 seed = 1)

mod
}
}
\references{
Lysen, S. (2009) Permuted inclusion criterion: A variable selection technique. 
University of Pennsylvania
\url{https://repository.upenn.edu/edissertations/28/}
}
\seealso{
\code{\link{rank_binomial}}, \code{\link[BradleyTerry2]{BTm}}

Other model selection functions: 
\code{\link{crossvalidation}()},
\code{\link{forward}()}
}
\author{
Jonathan Steinke and KauÃª de Sousa
}
\concept{model selection functions}
